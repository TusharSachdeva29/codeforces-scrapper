{
  "title": "E. Empty Triangle",
  "statement": "\nThis is an interactive problem.\nThe pink soldiers hid from you \nn\n𝑛\n (\n3≤n≤1500\n3\n≤\n𝑛\n≤\n1500\n) fixed points \n(\nx\n1\n,\ny\n1\n),(\nx\n2\n,\ny\n2\n),…,(\nx\nn\n,\ny\nn\n)\n(\n𝑥\n1\n,\n𝑦\n1\n)\n,\n(\n𝑥\n2\n,\n𝑦\n2\n)\n,\n…\n,\n(\n𝑥\n𝑛\n,\n𝑦\n𝑛\n)\n, whose coordinates are not given to you. Also, it is known that no two points have the same coordinates, and no three points are collinear.\nYou can ask the Frontman about three distinct indices \ni\n𝑖\n, \nj\n𝑗\n, \nk\n𝑘\n. Then, he will draw a triangle with points \n(\nx\ni\n,\ny\ni\n)\n(\n𝑥\n𝑖\n,\n𝑦\n𝑖\n)\n, \n(\nx\nj\n,\ny\nj\n)\n(\n𝑥\n𝑗\n,\n𝑦\n𝑗\n)\n, \n(\nx\nk\n,\ny\nk\n)\n(\n𝑥\n𝑘\n,\n𝑦\n𝑘\n)\n, and respond with the following:\nUsing at most \n75\n75\n queries, you must find any triangle formed by three of the points, not containing any other hidden point inside.\nDo note that the Frontman may be adaptive while choosing the point to give you. In other words, the choice of the point can be determined by various factors including but not limited to the orientation of points and the previous queries. However, note that the sequence of points will never be altered.\nHacks are disabled for this problem. Your solution will be judged on exactly \n35\n35\n input files, including the example input.\nEach test contains multiple test cases. The first line contains the number of test cases \nt\n𝑡\n (\n1≤t≤20\n1\n≤\n𝑡\n≤\n20\n). The description of the test cases follows.\nThe first line of each test case contains one positive integer \nn\n𝑛\n — the number of points (\n3≤n≤1500\n3\n≤\n𝑛\n≤\n1500\n).\nAfterwards, you can output the following on a separate line to ask a query:\nThen, the interactor responds with one integer on a new line:\nIf you want to print an answer, you can output the following on a separate line:\nThen, the following interaction happens:\nDo note that printing the answer does not count towards the number of queries made.\nDo note that the interactor may be adaptive while choosing the point to give you. In other words, the choice of the point can be determined by various factors including but not limited to the orientation of points and the previous queries. However, note that the sequence of points will never be altered.\nAfter printing each query do not forget to output the end of line and flush\n∗\n∗\n the output. Otherwise, you will get Idleness limit exceeded verdict.\nIf, at any interaction step, you read \n−1\n−\n1\n instead of valid data, your solution must exit immediately. This means that your solution will receive Wrong answer because of an invalid query or any other mistake. Failing to exit can result in an arbitrary verdict because your solution will continue to read from a closed stream.\nHacks\nHacks are disabled for this problem. Your solution will be judged on exactly \n35\n35\n input files, including the example input.\n∗\n∗\nTo flush, use:\nIn the first test case, the points are \n(3,0),(0,3),(5,2),(3,1),(2,2),(4,4)\n(\n3\n,\n0\n)\n,\n(\n0\n,\n3\n)\n,\n(\n5\n,\n2\n)\n,\n(\n3\n,\n1\n)\n,\n(\n2\n,\n2\n)\n,\n(\n4\n,\n4\n)\n.\nThe triangles corresponding to the three queries are as follows.\nYou can see that the triangle formed by \n(0,3)\n(\n0\n,\n3\n)\n, \n(2,2)\n(\n2\n,\n2\n)\n, \n(4,4)\n(\n4\n,\n4\n)\n does not contain any other hidden point inside. Therefore, it is a valid answer.\nDo note that the interaction example only shows a valid interaction, and not necessarily the actual response. For example, it is possible that the Frontman responds with \n4\n4\n when you query \"? 1 2 3\". However, as the Frontman does not alter the sequence of points, he never responds with \n6\n6\n for the same query.\nIn the second test case, there are only \n3\n3\n points. Therefore, we know that the unique triangle formed by the points does not contain any other hidden point inside.",
  "inputSpec": "",
  "outputSpec": "",
  "sampleInputs": [
    "2\n6\n\n5\n\n4\n\n0\n\n3"
  ],
  "sampleOutputs": [
    "? 1 2 3\n\n? 1 5 3\n\n? 2 5 6\n\n! 2 5 6\n\n! 1 2 3"
  ],
  "note": "In the first test case, the points are \n(3,0),(0,3),(5,2),(3,1),(2,2),(4,4)\n(\n3\n,\n0\n)\n,\n(\n0\n,\n3\n)\n,\n(\n5\n,\n2\n)\n,\n(\n3\n,\n1\n)\n,\n(\n2\n,\n2\n)\n,\n(\n4\n,\n4\n)\n.\nThe triangles corresponding to the three queries are as follows.\nYou can see that the triangle formed by \n(0,3)\n(\n0\n,\n3\n)\n, \n(2,2)\n(\n2\n,\n2\n)\n, \n(4,4)\n(\n4\n,\n4\n)\n does not contain any other hidden point inside. Therefore, it is a valid answer.\nDo note that the interaction example only shows a valid interaction, and not necessarily the actual response. For example, it is possible that the Frontman responds with \n4\n4\n when you query \"? 1 2 3\". However, as the Frontman does not alter the sequence of points, he never responds with \n6\n6\n for the same query.\nIn the second test case, there are only \n3\n3\n points. Therefore, we know that the unique triangle formed by the points does not contain any other hidden point inside.",
  "images": [
    "image_1.png",
    "image_2.png"
  ]
}