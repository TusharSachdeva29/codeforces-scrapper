{
  "title": "H. Bro Thinks He's Him",
  "statement": "Skibidus thinks he's Him! He proved it by solving this difficult task. Can you also prove yourself?\nGiven a binary string\n∗\n∗\n \nt\n𝑡\n, \nf(t)\n𝑓\n(\n𝑡\n)\n is defined as the minimum number of contiguous substrings, each consisting of identical characters, into which \nt\n𝑡\n can be partitioned. For example, \nf(00110001)=4\n𝑓\n(\n00110001\n)\n=\n4\n because \nt\n𝑡\n can be partitioned as \n[00][11][000][1]\n[00][11][000][1]\n where each bracketed segment consists of identical characters.\nSkibidus gives you a binary string \ns\n𝑠\n and \nq\n𝑞\n queries. In each query, a single character of the string is flipped (i.e. \n0\n0\n changes to \n1\n1\n and \n1\n1\n changes to \n0\n0\n); changes are saved after the query is processed. After each query, output the sum over all \nf(b)\n𝑓\n(\n𝑏\n)\n where \nb\n𝑏\n is a non-empty subsequence\n†\n†\n of \ns\n𝑠\n, modulo \n998244353\n998\n244\n353\n.\n∗\n∗\nA binary string consists of only characters \n0\n0\n and \n1\n1\n.\n†\n†\nA subsequence of a string is a string which can be obtained by removing several (possibly zero) characters from the original string.\nThe first line contains an integer \nt\n𝑡\n (\n1≤t≤\n10\n4\n1\n≤\n𝑡\n≤\n10\n4\n) — the number of test cases.\nThe first line of each test case contains a binary string \ns\n𝑠\n (\n1≤|s|≤2⋅\n10\n5\n1\n≤\n|\n𝑠\n|\n≤\n2\n⋅\n10\n5\n).\nThe following line of each test case contains an integer \nq\n𝑞\n (\n1≤q≤2⋅\n10\n5\n1\n≤\n𝑞\n≤\n2\n⋅\n10\n5\n) — the number of queries.\nThe following line contains \nq\n𝑞\n integers \nv\n1\n,\nv\n2\n,…,\nv\nq\n𝑣\n1\n,\n𝑣\n2\n,\n…\n,\n𝑣\n𝑞\n (\n1≤\nv\ni\n≤|s|\n1\n≤\n𝑣\n𝑖\n≤\n|\n𝑠\n|\n), denoting \ns\nv\ni\n𝑠\n𝑣\n𝑖\n is flipped for the \ni\n𝑖\n'th query.\nIt is guaranteed that the sum of \n|s|\n|\n𝑠\n|\n and the sum of \nq\n𝑞\n over all test cases does not exceed \n2⋅\n10\n5\n2\n⋅\n10\n5\n.\nFor each test case, output \nq\n𝑞\n integers on a single line — the answer after each query modulo \n998244353\n998\n244\n353\n.\nIn the first test case, \ns\n𝑠\n becomes \n001\n001\n after the first query. Let's calculate the answer for each subsequence:\nThe sum of these values is \n10\n10\n, modulo \n998244353\n998\n244\n353\n.",
  "inputSpec": "The first line contains an integer \nt\n𝑡\n (\n1≤t≤\n10\n4\n1\n≤\n𝑡\n≤\n10\n4\n) — the number of test cases.\nThe first line of each test case contains a binary string \ns\n𝑠\n (\n1≤|s|≤2⋅\n10\n5\n1\n≤\n|\n𝑠\n|\n≤\n2\n⋅\n10\n5\n).\nThe following line of each test case contains an integer \nq\n𝑞\n (\n1≤q≤2⋅\n10\n5\n1\n≤\n𝑞\n≤\n2\n⋅\n10\n5\n) — the number of queries.\nThe following line contains \nq\n𝑞\n integers \nv\n1\n,\nv\n2\n,…,\nv\nq\n𝑣\n1\n,\n𝑣\n2\n,\n…\n,\n𝑣\n𝑞\n (\n1≤\nv\ni\n≤|s|\n1\n≤\n𝑣\n𝑖\n≤\n|\n𝑠\n|\n), denoting \ns\nv\ni\n𝑠\n𝑣\n𝑖\n is flipped for the \ni\n𝑖\n'th query.\nIt is guaranteed that the sum of \n|s|\n|\n𝑠\n|\n and the sum of \nq\n𝑞\n over all test cases does not exceed \n2⋅\n10\n5\n2\n⋅\n10\n5\n.",
  "outputSpec": "For each test case, output \nq\n𝑞\n integers on a single line — the answer after each query modulo \n998244353\n998\n244\n353\n.",
  "sampleInputs": [
    "3\n101\n2\n1 3\n10110\n3\n1 2 3\n101110101\n5\n7 2 4 4 1"
  ],
  "sampleOutputs": [
    "10 7 \n61 59 67 \n1495 1169 1417 1169 1396"
  ],
  "note": "In the first test case, \ns\n𝑠\n becomes \n001\n001\n after the first query. Let's calculate the answer for each subsequence:\nThe sum of these values is \n10\n10\n, modulo \n998244353\n998\n244\n353\n.",
  "images": []
}