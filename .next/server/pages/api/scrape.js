"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/scrape";
exports.ids = ["pages/api/scrape"];
exports.modules = {

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./pages/api/scrape.js":
/*!*****************************!*\
  !*** ./pages/api/scrape.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_gemini__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/gemini */ \"(api)/./utils/gemini.js\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const { url  } = req.body;\n        // Run scraper script with better error handling\n        try {\n            await new Promise((resolve, reject)=>{\n                (0,child_process__WEBPACK_IMPORTED_MODULE_1__.execFile)(\"node\", [\n                    \"test.js\",\n                    url\n                ], {\n                    timeout: 60000\n                }, (error, stdout, stderr)=>{\n                    if (error) {\n                        console.error(\"Scraper script error:\", error);\n                        console.error(\"Stderr:\", stderr);\n                        if (error.message.includes(\"Cannot find module\")) {\n                            reject(new Error(\"Missing dependencies. Please run: npm install puppeteer axios\"));\n                        } else {\n                            reject(error);\n                        }\n                    } else {\n                        resolve(stdout);\n                    }\n                });\n            });\n        } catch (scriptError) {\n            console.error(\"Failed to run scraper:\", scriptError);\n            return res.status(500).json({\n                message: scriptError.message || \"Failed to run scraper script\",\n                error: \"SCRAPER_ERROR\"\n            });\n        }\n        // Check if the scraping result file exists\n        const scrapingFilePath = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"scraping1.json\");\n        if (!fs__WEBPACK_IMPORTED_MODULE_3___default().existsSync(scrapingFilePath)) {\n            return res.status(500).json({\n                message: \"Scraping failed to produce output file\",\n                error: \"NO_OUTPUT_FILE\"\n            });\n        }\n        // Read scraped data\n        const scrapedData = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_3___default().readFileSync(scrapingFilePath, \"utf8\"));\n        // Process through Gemini with better error handling\n        const formattedData = {\n            ...scrapedData\n        };\n        // Process each field separately with error handling\n        try {\n            formattedData.statement = await (0,_utils_gemini__WEBPACK_IMPORTED_MODULE_0__.formatMathWithGemini)(scrapedData.statement);\n            formattedData.inputSpec = await (0,_utils_gemini__WEBPACK_IMPORTED_MODULE_0__.formatMathWithGemini)(scrapedData.inputSpec);\n            formattedData.outputSpec = await (0,_utils_gemini__WEBPACK_IMPORTED_MODULE_0__.formatMathWithGemini)(scrapedData.outputSpec);\n            formattedData.noteText = await (0,_utils_gemini__WEBPACK_IMPORTED_MODULE_0__.formatMathWithGemini)(scrapedData.noteText);\n        } catch (geminiError) {\n            console.error(\"Gemini processing error:\", geminiError);\n            // Continue with unformatted data if Gemini fails\n            formattedData.statement = scrapedData.statement;\n            formattedData.inputSpec = scrapedData.inputSpec;\n            formattedData.outputSpec = scrapedData.outputSpec;\n            formattedData.noteText = scrapedData.noteText;\n        }\n        return res.status(200).json(formattedData);\n    } catch (error) {\n        console.error(\"Error in API handler:\", error);\n        return res.status(500).json({\n            message: error.message || \"Internal server error\",\n            error: \"INTERNAL_ERROR\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/scrape.js\n");

/***/ }),

/***/ "(api)/./utils/gemini.js":
/*!*************************!*\
  !*** ./utils/gemini.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"formatMathWithGemini\": () => (/* binding */ formatMathWithGemini)\n/* harmony export */ });\nconst GEMINI_API_KEY = process.env.NEXT_PUBLIC_GEMINI_API_KEY;\nconst API_URL = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent\";\nasync function formatMathWithGemini(text) {\n    if (!text) return \"\";\n    try {\n        const response = await fetch(`${API_URL}?key=${GEMINI_API_KEY}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                contents: [\n                    {\n                        parts: [\n                            {\n                                text: `Given the following JSON representing a Codeforces problem statement, format it into a structured, human-readable format similar to LeetCode's problem page.\r\n\r\nFormatting Rules:\r\nTitle: Display prominently at the top.\r\nProblem Statement:\r\nConvert plain paragraphs into bullet points for clarity.\r\nDo not change or remove any information. Only restructure for better readability.\r\nMathematical Expressions:\r\nConvert all mathematical notations into LaTeX format.\r\nExample conversions:\r\n2^30 → $2^{30}$\r\na<=x<=b → $a \\leq x \\leq b$ \r\nNotes Section:\r\nIf additional information is provided, include it with proper spacing between different points for clarity.\r\nNo Extra Comments:\r\nDo not add phrases like “Here's the LaTeX code” or unnecessary explanations.\r\nOnly return the formatted output. \r\n\r\n\"AND VERY IMPORTANTLY DONT MISS ANY DETAIL FROM THE PROBLEM STATEMENT\"\r\n\r\nHERES THE TEXT TO CONVERT: \r\n\r\n${text}`\n                            }\n                        ]\n                    }\n                ]\n            })\n        });\n        const data = await response.json();\n        console.log(\"Gemini API Response:\", JSON.stringify(data, null, 2));\n        // Updated response structure handling\n        if (data.error) {\n            throw new Error(data.error.message || \"Gemini API error\");\n        }\n        if (data.candidates?.[0]?.content?.parts?.[0]?.text) {\n            return data.candidates[0].content.parts[0].text;\n        }\n        // Fallback\n        console.error(\"Unexpected Gemini API response format:\", data);\n        return text;\n    } catch (error) {\n        console.error(\"Error calling Gemini API:\", error);\n        return text;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi91dGlscy9nZW1pbmkuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGNBQWMsR0FBR0MsT0FBTyxDQUFDQyxHQUFHLENBQUNDLDBCQUEwQjtBQUM3RCxNQUFNQyxPQUFPLEdBQUcsMEZBQTBGO0FBRW5HLGVBQWVDLG9CQUFvQixDQUFDQyxJQUFJLEVBQUU7SUFDL0MsSUFBSSxDQUFDQSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7SUFFckIsSUFBSTtRQUNGLE1BQU1DLFFBQVEsR0FBRyxNQUFNQyxLQUFLLENBQUMsQ0FBQyxFQUFFSixPQUFPLENBQUMsS0FBSyxFQUFFSixjQUFjLENBQUMsQ0FBQyxFQUFFO1lBQy9EUyxNQUFNLEVBQUUsTUFBTTtZQUNkQyxPQUFPLEVBQUU7Z0JBQ1AsY0FBYyxFQUFFLGtCQUFrQjthQUNuQztZQUNEQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDO2dCQUNuQkMsUUFBUSxFQUFFO29CQUFDO3dCQUNUQyxLQUFLLEVBQUU7NEJBQUM7Z0NBQ05ULElBQUksRUFBRSxDQUFDOzs7cUJBd0JWO2lCQUFDO2FBQ0gsQ0FBQztTQUNILENBQUM7UUFFRixNQUFNVSxJQUFJLEdBQUc7UUFDYkUsT0FBTyxDQUFDQyxHQUFHLENBQUMsc0JBQXNCLEVBQUVQLElBQUksQ0FBQ0M7UUFFekM7UUFDQSxJQUFJRyxJQUFJO1lBQ04sTUFBTSxJQUFJSyxLQUFLLENBQUNMO1FBQ2xCLENBQUM7UUFFRCxJQUFJQSxJQUFJLENBQUNPLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUVULEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFVCxJQUFJLEVBQUU7WUFDbkQsT0FBT1U7UUFDVCxDQUFDO1FBRUQsV0FBVzs7UUFFWCxPQUFPVixJQUFJLENBQUM7O1FBRVpZLE9BQU8sQ0FBQ0UsS0FBSyxDQUFDOztJQUVoQixDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21heWJlLy4vdXRpbHMvZ2VtaW5pLmpzPzA3ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgR0VNSU5JX0FQSV9LRVkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HRU1JTklfQVBJX0tFWTtcclxuY29uc3QgQVBJX1VSTCA9ICdodHRwczovL2dlbmVyYXRpdmVsYW5ndWFnZS5nb29nbGVhcGlzLmNvbS92MWJldGEvbW9kZWxzL2dlbWluaS0yLjAtZmxhc2g6Z2VuZXJhdGVDb250ZW50JztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmb3JtYXRNYXRoV2l0aEdlbWluaSh0ZXh0KSB7XHJcbiAgaWYgKCF0ZXh0KSByZXR1cm4gJyc7XHJcbiAgXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0/a2V5PSR7R0VNSU5JX0FQSV9LRVl9YCwge1xyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBjb250ZW50czogW3tcclxuICAgICAgICAgIHBhcnRzOiBbe1xyXG4gICAgICAgICAgICB0ZXh0OiBgR2l2ZW4gdGhlIGZvbGxvd2luZyBKU09OIHJlcHJlc2VudGluZyBhIENvZGVmb3JjZXMgcHJvYmxlbSBzdGF0ZW1lbnQsIGZvcm1hdCBpdCBpbnRvIGEgc3RydWN0dXJlZCwgaHVtYW4tcmVhZGFibGUgZm9ybWF0IHNpbWlsYXIgdG8gTGVldENvZGUncyBwcm9ibGVtIHBhZ2UuXHJcblxyXG5Gb3JtYXR0aW5nIFJ1bGVzOlxyXG5UaXRsZTogRGlzcGxheSBwcm9taW5lbnRseSBhdCB0aGUgdG9wLlxyXG5Qcm9ibGVtIFN0YXRlbWVudDpcclxuQ29udmVydCBwbGFpbiBwYXJhZ3JhcGhzIGludG8gYnVsbGV0IHBvaW50cyBmb3IgY2xhcml0eS5cclxuRG8gbm90IGNoYW5nZSBvciByZW1vdmUgYW55IGluZm9ybWF0aW9uLiBPbmx5IHJlc3RydWN0dXJlIGZvciBiZXR0ZXIgcmVhZGFiaWxpdHkuXHJcbk1hdGhlbWF0aWNhbCBFeHByZXNzaW9uczpcclxuQ29udmVydCBhbGwgbWF0aGVtYXRpY2FsIG5vdGF0aW9ucyBpbnRvIExhVGVYIGZvcm1hdC5cclxuRXhhbXBsZSBjb252ZXJzaW9uczpcclxuMl4zMCDihpIgJDJeezMwfSRcclxuYTw9eDw9YiDihpIgJGEgXFxsZXEgeCBcXGxlcSBiJCBcclxuTm90ZXMgU2VjdGlvbjpcclxuSWYgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBpcyBwcm92aWRlZCwgaW5jbHVkZSBpdCB3aXRoIHByb3BlciBzcGFjaW5nIGJldHdlZW4gZGlmZmVyZW50IHBvaW50cyBmb3IgY2xhcml0eS5cclxuTm8gRXh0cmEgQ29tbWVudHM6XHJcbkRvIG5vdCBhZGQgcGhyYXNlcyBsaWtlIOKAnEhlcmUncyB0aGUgTGFUZVggY29kZeKAnSBvciB1bm5lY2Vzc2FyeSBleHBsYW5hdGlvbnMuXHJcbk9ubHkgcmV0dXJuIHRoZSBmb3JtYXR0ZWQgb3V0cHV0LiBcclxuXHJcblwiQU5EIFZFUlkgSU1QT1JUQU5UTFkgRE9OVCBNSVNTIEFOWSBERVRBSUwgRlJPTSBUSEUgUFJPQkxFTSBTVEFURU1FTlRcIlxyXG5cclxuSEVSRVMgVEhFIFRFWFQgVE8gQ09OVkVSVDogXHJcblxyXG4ke3RleHR9YFxyXG4gICAgICAgICAgfV1cclxuICAgICAgICB9XVxyXG4gICAgICB9KVxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIGNvbnNvbGUubG9nKCdHZW1pbmkgQVBJIFJlc3BvbnNlOicsIEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpKTtcclxuXHJcbiAgICAvLyBVcGRhdGVkIHJlc3BvbnNlIHN0cnVjdHVyZSBoYW5kbGluZ1xyXG4gICAgaWYgKGRhdGEuZXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGRhdGEuZXJyb3IubWVzc2FnZSB8fCAnR2VtaW5pIEFQSSBlcnJvcicpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChkYXRhLmNhbmRpZGF0ZXM/LlswXT8uY29udGVudD8ucGFydHM/LlswXT8udGV4dCkge1xyXG4gICAgICByZXR1cm4gZGF0YS5jYW5kaWRhdGVzWzBdLmNvbnRlbnQucGFydHNbMF0udGV4dDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGYWxsYmFja1xyXG4gICAgY29uc29sZS5lcnJvcignVW5leHBlY3RlZCBHZW1pbmkgQVBJIHJlc3BvbnNlIGZvcm1hdDonLCBkYXRhKTtcclxuICAgIHJldHVybiB0ZXh0O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjYWxsaW5nIEdlbWluaSBBUEk6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHRleHQ7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJHRU1JTklfQVBJX0tFWSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19HRU1JTklfQVBJX0tFWSIsIkFQSV9VUkwiLCJmb3JtYXRNYXRoV2l0aEdlbWluaSIsInRleHQiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY29udGVudHMiLCJwYXJ0cyIsImRhdGEiLCJqc29uIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIiwiY2FuZGlkYXRlcyIsImNvbnRlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./utils/gemini.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/scrape.js"));
module.exports = __webpack_exports__;

})();